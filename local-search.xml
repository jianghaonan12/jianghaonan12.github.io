<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>docker安装nginx</title>
    <link href="/2023/07/02/docker%E5%AE%89%E8%A3%85nginx/"/>
    <url>/2023/07/02/docker%E5%AE%89%E8%A3%85nginx/</url>
    
    <content type="html"><![CDATA[<h3 id="1-拉取-nginx-镜像"><a href="#1-拉取-nginx-镜像" class="headerlink" title="1. 拉取 nginx 镜像"></a>1. 拉取 nginx 镜像</h3><figure><div class="code-wrapper"><pre class="language-none"><code class="language-none"># 拉取 nginx 镜像docker pull nginx           # 不加版本号默认下载 latest 版本，即 docker pull nginx:latest# 查看镜像docker images</code></pre></div></figure><h3 id="2-运行镜像（使用-nginx-latest-镜像创建容器）"><a href="#2-运行镜像（使用-nginx-latest-镜像创建容器）" class="headerlink" title="2. 运行镜像（使用 nginx:latest 镜像创建容器）"></a>2. 运行镜像（使用 nginx:latest 镜像创建容器）</h3><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">mkdir -p &#x2F;docker&#x2F;nginx&#x2F;conf # nginx 存放配置文件的目录 mkdir -p &#x2F;docker&#x2F;nginx&#x2F;logs # nginx 存放日志的目录 mkdir -p &#x2F;docker&#x2F;nginx&#x2F;html # nginx 启动网站目录（存放静态文件的目录）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p>然后将 nginx 镜像中的部分文件拷贝到宿主机的挂载目录中</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none"># 1. 先使用 nginx 镜像创建 nginx 容器，将文件拷贝出来先 docker run --name nginx -d -p 80:80 nginx # 2. 将容器中的 nginx.conf 文件拷贝到宿主机中 docker cp nginx:&#x2F;etc&#x2F;nginx&#x2F;nginx.conf &#x2F;docker&#x2F;nginx&#x2F;conf&#x2F;nginx.conf # 3. 将容器中 conf.d 文件夹（包括里面的文件）拷贝到宿主机中 docker cp nginx:&#x2F;etc&#x2F;nginx&#x2F;conf.d &#x2F;docker&#x2F;nginx&#x2F;conf&#x2F;conf.d # 4. 将容器中的 html 文件夹拷贝到宿主机中 docker cp nginx:&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html &#x2F;docker&#x2F;nginx&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>停止刚刚运行的 nginx 容器</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none"># 停止 nginx 容器 docker stop nginx # 删除 nginx 容器 docker rm nginx <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>重新使用 nginx 镜像创建 nginx 容器，并挂载容器数据卷到宿主机目录中<br>    # 要执行的命令</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">docker run -p 80:80 --name nginx \-v &#x2F;docker&#x2F;nginx&#x2F;conf&#x2F;nginx.conf:&#x2F;etc&#x2F;nginx&#x2F;nginx.conf \-v &#x2F;docker&#x2F;nginx&#x2F;conf&#x2F;conf.d:&#x2F;etc&#x2F;nginx&#x2F;conf.d \-v &#x2F;docker&#x2F;nginx&#x2F;logs:&#x2F;var&#x2F;log&#x2F;nginx \-v &#x2F;docker&#x2F;nginx&#x2F;html:&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html \-d \--restart&#x3D;always \nginx:latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>命令说明：</p><ul><li><code>-p 80:80</code> 指定端口映射，格式为：主机(宿主)端口:容器端口</li><li><code>--name nginx</code> 命名启动的容器名字为 nginx</li><li><code>-v</code> 载文件或目录：前面是宿主机部分，后面是容器部分</li><li><code>-d</code> 表示后台启动容器</li><li><code>--restart=always</code> 重启模式，每次启动 docker 都会自动重启 nginx 容器。</li><li><code>nginx:latest</code> 表示使用该镜像创建容器</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>My First Post</title>
    <link href="/2023/07/02/My-First-Post/"/>
    <url>/2023/07/02/My-First-Post/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/07/02/hello-world/"/>
    <url>/2023/07/02/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
